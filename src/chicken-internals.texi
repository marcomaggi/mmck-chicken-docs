\input texinfo.tex
@c %**start of header
@setfilename chicken-internals.info
@settitle @sc{mmck} @sc{chicken} Internals
@c %**end of header

@include version.texi
@include macros.texi

@c page
@c ------------------------------------------------------------
@c Values.
@c ------------------------------------------------------------

@set TITLE                      @sc{mmck} @sc{chicken} Internals

@c To be used as @value{PACKAGE} whenever we need to include the full
@c name of this package.
@set PACKAGE                    @sc{mmck} @sc{chicken} Docs

@c To be used as @value{PACKAGE} whenever we need to include the
@c nickname of the project: the name that is used to compose the
@c distribution tarball or the web address.
@set PACKAGE_NICKNAME           chicken-internals

@c To be used as @value{AUTHOR} whenever we need to include the list of
@c authors of this document.
@set AUTHOR                     Marco Maggi

@c To be used as @value{AUTHOR_EMAIL} whenever we need to include the
@c email of the *single* author of this document.
@set AUTHOR_EMAIL               @email{marco.maggi-ipsu@@poste.it}

@c To be used as @value{COPYRIGHT_YEARS} whenever we need to include the
@c list of copyright years.
@set COPYRIGHT_YEARS            2019

@set CHICKEN_VERSION            5.0.0

@c ------------------------------------------------------------

@set GithubUrl                  @url{https://github.com/marcomaggi/@value{PACKAGE_NICKNAME}}
@set BitbucketUrl               @url{https://bitbucket.org/marcomaggi/@value{PACKAGE_NICKNAME}}
@set DownloadUrl                @url{https://bitbucket.org/marcomaggi/@value{PACKAGE_NICKNAME}/downloads}
@set DocumentationUrl           @url{https://marcomaggi.github.io/docs/@value{PACKAGE_NICKNAME}.html}

@c page
@c ------------------------------------------------------------
@c Local macros.
@c ------------------------------------------------------------

@macro mmck{}
@sc{mmck}
@end macro

@macro chicken{}
@sc{chicken}
@end macro

@c page
@c ------------------------------------------------------------
@c Copyright notice.
@c ------------------------------------------------------------

@copying
This document describes the internals of @chicken{} version @value{CHICKEN_VERSION}; this document
is part of @value{PACKAGE}, a collection of unofficial documentation about the @chicken{} compiler
and its development environment.  @chicken{} is a Scheme--to--C compiler supporting the language
features as defined in the ``Revised^5 Report on Scheme''.

This package is distributed under the terms of the @url{http://creativecommons.org/licenses/by/3.0/,
Creative Commons Attribution 3.0 License}.  All code fragments in this document are hereby put in
the public domain.

The latest release can be downloaded from:

@center @value{DownloadUrl}

@noindent
development takes place at:

@center @value{GithubUrl}

@noindent
and as backup at:

@center @value{BitbucketUrl}
@end copying

@c page
@c ------------------------------------------------------------
@c Headers.
@c ------------------------------------------------------------

@titlepage
@title @value{TITLE}
@subtitle Revision @value{VERSION}
@author @value{AUTHOR} @value{AUTHOR_EMAIL}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c ------------------------------------------------------------

@ifinfo
@dircategory Development
@direntry
* chicken-internals: (chicken-internals).  Unofficial documentation for
                                           @chicken{} internals.
@end direntry
@end ifinfo

@c ------------------------------------------------------------

@ignore
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex fn cp
@end ignore

@c page
@ifnottex
@node Top
@top @value{TITLE}

@insertcopying

@menu
* overview::                    Overview of the document.
* slots::                       Slots operations.

Appendices

* credits::                     Document authors and source material.
* references::                  Bibliography and references.

Indexes

* concept index::               An entry for each concept.
* function index::              An entry for each function.
* variable index::              An entry for each variable.
* type index::                  An entry for each type.
@end menu
@end ifnottex

@c page
@node overview
@chapter Overview of the package


@cindex @library{mmck template}, library
@cindex Library @library{mmck template}


This document describes version @value{VERSION} of @value{PACKAGE}, a @chicken{} language library
implementing a template library.  @chicken{} is a Scheme-to-C compiler supporting the language
features as defined in the ``Revised^5 Report on Scheme''.

This package supports @posix{} platforms.  This package depends upon the @chicken{} egg
@code{coops}.  To run the tests distributed with the source code: this package depends upon the
package @mmck{} Checks.

The package installs the library @library{mmck template} along with its import library.  To require
the library and import its syntactic bindings in a module we can do:

@example
(declare (unit my-module)
         (emit-import-library my-module))

(require-library (mmck template))

(module (my-module)
    ()
  (import (scheme)
    (mmck template))

  ...

  #| end of module |# )
@end example

@c page
@node slots
@chapter Slots operations


We can access the internal representation of all the compound Scheme values implemented as
``blocks'' with the following system operations.


@deffn {System Operation} {##sys#slot} @qvar{block-value} @qvar{slot-index}
Unsafe slot getter.  We can use it when we know that: @qvar{block-value} is a reference to a block
value; @qvar{slot-index} is a valid slot index for @qvar{block-value}.  Return the undefined value.
@end deffn


@deffn {System Operation} {##sys#setslot} @qvar{block-value} @qvar{slot-index} @qvar{new-value}
Unsafe slot setter.  We can use it when we know that: @qvar{block-value} is a reference to a block
value; @qvar{slot-index} is a valid slot index for @qvar{block-value}.  Return the undefined value.
@end deffn


@deffn {System Operation} {##sys#setislot} @qvar{block-value} @qvar{slot-index} @qvar{new-immediate-value}
Like @syntax{##sys#setslot}, it is an unsafe slot setter with an additional constraint on the new
value.  We can use it when we know that: @qvar{block-value} is a reference to a block value;
@qvar{slot-index} is a valid slot index for @qvar{block-value}; @qvar{new-immediate-value} is any
immediate Scheme value (examples: a fixnum, a boolean).  Return the undefined value.
@end deffn


@deffn {System Operation} {##sys#size} @qvar{block-value}
Unsafe block length getter: return a fixnum representing the number of slots.  We can use it when we
know that: @qvar{block-value} is a reference to a block value.
@end deffn


When the block value is a Scheme vector, we could make a more descriptive use of the above
operations with the following macros:

@lisp
(define-syntax-rule ($vector-ref ?vector ?slot-index)
  (##sys#slot ?vector ?slot-index))

(define-syntax-rule ($vector-set! ?vector ?slot-index ?new-value)
  (##sys#setslot ?vector ?slot-index ?new-value))

(define-syntax-rule ($vector-length ?vector)
  (##sys#size ?vector))
@end lisp

@c page
@node credits
@appendix Document authors and source material


The core informations about the data representation is mostly a derivative from the web page
``CHICKEN internals: data representation'' by @url{https://wiki.call-cc.org/users/peter-bex, Peter
Bex} which is licensed under @url{https://creativecommons.org/licenses/by/3.0/, CC BY 3.0} (@aurl{}
last verified May 14, 2019):

@center @url{https://www.more-magic.net/posts/internals-data-representation.html}

@noindent
it was reformatted and edited from the original @sc{html}.

@c page
@node references
@appendix Bibliography and references


This document is available online:

@center @value{DocumentationUrl}

@noindent
the latest release of this package can be downloaded from:

@center @value{DownloadUrl}

@noindent
development takes place at:

@center @value{GithubUrl}

@noindent
and as backup at:

@center @value{BitbucketUrl}

@noindent
@chicken{} can be downloaded from:

@center @url{http://www.call-cc.org/}

@c page
@node concept index
@appendix An entry for each concept

@printindex cp

@node function index
@appendix An entry for each function

@printindex fn

@node variable index
@appendix An entry for each variable

@printindex vr

@node type index
@appendix An entry for each type

@printindex tp

@contents
@bye

@c end of file
@c Local Variables:
@c ispell-local-dictionary: "en_GB-ise-w_accents"
@c end:
